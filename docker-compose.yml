version: '3.8'
services:
  frontend:
    build: ./frontend-service
    ports:
      - "3000:80"
    depends_on:
      - order-service
    networks:
      - microservices-net

  order-service:
    build: ./order-service
    ports:
      - "3001:3001"
    depends_on:
      - order-db
      - kafka
    environment:
      - PGHOST=order-db
      - PGUSER=user
      - PGPASSWORD=password
      - PGDATABASE=order_db
    networks:
      - microservices-net

  notification-service:
    build: ./notification-service
    depends_on:
      - notification-db
      - kafka
    environment:
      - PGHOST=notification-db
      - PGUSER=user
      - PGPASSWORD=password
      - PGDATABASE=notification_db
    networks:
      - microservices-net

  order-db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=order_db
    volumes:
      - order_db_data:/var/lib/postgresql/data
    networks:
      - microservices-net

  notification-db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=notification_db
    volumes:
      - notification_db_data:/var/lib/postgresql/data
    networks:
      - microservices-net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - microservices-net

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - microservices-net

  # NEW: Kafdrop UI Service
  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: gke-microservices-practice-kafdrop-1
    networks:
      - microservices-net
    depends_on:
      - kafka
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"

networks:
  microservices-net:
    driver: bridge

volumes:
  order_db_data:
  notification_db_data:

