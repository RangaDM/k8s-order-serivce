# --- Order Service Deployment ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
    spec:
      containers:
      - name: order-service
        image: rangadm/order-service:v1
        ports:
        - containerPort: 3001
        env:
        - name: PGHOST
          value: "order-db"
        - name: PGUSER
          value: "user"
        - name: PGPASSWORD
          value: "password"
        - name: PGDATABASE
          value: "order_db"
        - name: PGPORT
          value: "5432"
---
# --- Order Service ---
apiVersion: v1
kind: Service
metadata:
  name: order-service
spec:
  ports:
  - port: 3001
    targetPort: 3001
  selector:
    app: order-service
---
# --- SEPARATOR ---
---
# --- Notification Service Deployment ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: notification-service
  template:
    metadata:
      labels:
        app: notification-service
    spec:
      containers:
      - name: notification-service
        image: rangadm/notification-service:v1
        env:
        - name: PGHOST
          value: "notification-db"
        - name: PGUSER
          value: "user"
        - name: PGPASSWORD
          value: "password"
        - name: PGDATABASE
          value: "notification_db"
        - name: PGPORT
          value: "5432"
---
# --- SEPARATOR ---
---
# --- Frontend Service Deployment ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend-service
  template:
    metadata:
      labels:
        app: frontend-service
    spec:
      containers:
      - name: frontend-service
        image: rangadm/frontend-service:v1
        ports:
        - containerPort: 80
---
# --- Frontend Service (Internal ClusterIP) ---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  # NOTE: We removed 'type: LoadBalancer' because Istio Gateway will handle external traffic.
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: frontend-service

